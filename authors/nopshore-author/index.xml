<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>无岸 on 无岸的Blog</title>
    <link>https://nopshore.top/authors/nopshore-author/</link>
    <description>Recent content in 无岸 on 无岸的Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy; 2019 - 2021 &lt;a href=&#34;https://nopshore.top&#34;&gt;无岸&lt;/a&gt; · &lt;a href=&#34;https://icp.gov.moe/?keyword=20210731&#34; target=&#34;_blank&#34;&gt;萌ICP备20210731号&lt;/a&gt;
</copyright>
    <lastBuildDate>Wed, 18 Aug 2021 03:04:41 +0800</lastBuildDate><atom:link href="https://nopshore.top/authors/nopshore-author/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java中精度小于int的强制类型转换</title>
      <link>https://nopshore.top/posts/java%E4%B8%AD%E7%B2%BE%E5%BA%A6%E5%B0%8F%E4%BA%8Eint%E7%9A%84%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</link>
      <pubDate>Wed, 18 Aug 2021 03:04:41 +0800</pubDate>
      
      <guid>https://nopshore.top/posts/java%E4%B8%AD%E7%B2%BE%E5%BA%A6%E5%B0%8F%E4%BA%8Eint%E7%9A%84%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</guid>
      <description>精度小于int的数值运算的时候会被自动转换为int后进行运算 public class Demo{ public static void main(String[] args){ short s1 = 5; int i1 = 3; s1 = s1 + (short)i1; // 编译报错，不兼容的类型: 从int转换到shor</description>
    </item>
    
    <item>
      <title>一些帮助学习的网站（长期更新）</title>
      <link>https://nopshore.top/posts/%E4%B8%80%E4%BA%9B%E5%B8%AE%E5%8A%A9%E5%AD%A6%E4%B9%A0%E7%9A%84%E7%BD%91%E7%AB%99%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0/</link>
      <pubDate>Sun, 06 Jun 2021 00:17:03 +0800</pubDate>
      
      <guid>https://nopshore.top/posts/%E4%B8%80%E4%BA%9B%E5%B8%AE%E5%8A%A9%E5%AD%A6%E4%B9%A0%E7%9A%84%E7%BD%91%E7%AB%99%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0/</guid>
      <description>Biliili [B站 Leetcode力扣官方号] - https://space.bilibili.com/390775036?spm_id_from=333.788.b_765f7570696e666f.2 bilibili Leetcode力扣官方号 [B站 codesheep 程序羊 提供学习建议和经验] - https://www.bilibili.com/video/BV1jt411H71h B站 codesheep 程序羊 提供学习建议和经验 [B站 全网最全</description>
    </item>
    
    <item>
      <title>二进制、八进制、十进制、十六进制间的转换</title>
      <link>https://nopshore.top/posts/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%85%AB%E8%BF%9B%E5%88%B6%E5%8D%81%E8%BF%9B%E5%88%B6%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</link>
      <pubDate>Fri, 04 Jun 2021 22:52:13 +0800</pubDate>
      
      <guid>https://nopshore.top/posts/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%85%AB%E8%BF%9B%E5%88%B6%E5%8D%81%E8%BF%9B%E5%88%B6%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</guid>
      <description>二进制与十进制之间的转换 1. 二进制转十进制 二进制从最低位到高位表示的十进制数值是1、2、4、8、16、32&amp;hellip;的规律延申下去的，及$2^0、</description>
    </item>
    
    <item>
      <title>二进制的原码、反码与补码</title>
      <link>https://nopshore.top/posts/%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9A%84%E5%8E%9F%E7%A0%81%E5%8F%8D%E7%A0%81%E4%B8%8E%E8%A1%A5%E7%A0%81/</link>
      <pubDate>Thu, 03 Jun 2021 22:35:50 +0800</pubDate>
      
      <guid>https://nopshore.top/posts/%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9A%84%E5%8E%9F%E7%A0%81%E5%8F%8D%E7%A0%81%E4%B8%8E%E8%A1%A5%E7%A0%81/</guid>
      <description>计算机中正数和负数如何表示？ 在计算机中，所有的数据均以二进制数值的方式存储。以符号位区分正负数，符号位为0表示是整数。为1表示是负数。 原码 正数的原码就</description>
    </item>
    
    <item>
      <title>解决在ArchLinux上Chrome页面滚动掉帧的问题（开启平滑滚动）</title>
      <link>https://nopshore.top/posts/%E8%A7%A3%E5%86%B3%E5%9C%A8archlinux%E4%B8%8Achrome%E9%A1%B5%E9%9D%A2%E6%BB%9A%E5%8A%A8%E6%8E%89%E5%B8%A7%E7%9A%84%E9%97%AE%E9%A2%98%E5%BC%80%E5%90%AF%E5%B9%B3%E6%BB%91%E6%BB%9A%E5%8A%A8/</link>
      <pubDate>Fri, 27 Dec 2019 20:58:34 +0800</pubDate>
      
      <guid>https://nopshore.top/posts/%E8%A7%A3%E5%86%B3%E5%9C%A8archlinux%E4%B8%8Achrome%E9%A1%B5%E9%9D%A2%E6%BB%9A%E5%8A%A8%E6%8E%89%E5%B8%A7%E7%9A%84%E9%97%AE%E9%A2%98%E5%BC%80%E5%90%AF%E5%B9%B3%E6%BB%91%E6%BB%9A%E5%8A%A8/</guid>
      <description>解决方法 chrome地址栏输入：chrome://flags/#smooth-scrolling 第一项 Smooth Scrolling 选项选择 Disabled 点击右下脚 relaunch now 重启 安装chrome</description>
    </item>
    
    <item>
      <title>Java面向对象概述（二）：封装</title>
      <link>https://nopshore.top/posts/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%A6%82%E8%BF%B0%E4%BA%8C%E5%B0%81%E8%A3%85/</link>
      <pubDate>Fri, 11 Oct 2019 17:46:48 +0800</pubDate>
      
      <guid>https://nopshore.top/posts/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%A6%82%E8%BF%B0%E4%BA%8C%E5%B0%81%E8%A3%85/</guid>
      <description>封装的作用和优点 减少耦合 保护数据不被外界直接访问 使外部传进来的数据得到效验 保证了安全性 如何封装？ 使用访问权限修饰符对数据进行权限控制 public protected default private 演示 public class Demo{</description>
    </item>
    
    <item>
      <title>Java面向对象概述（一）：类的定义与实例化</title>
      <link>https://nopshore.top/posts/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%A6%82%E8%BF%B0%E4%B8%80%E7%B1%BB%E7%9A%84%E5%AE%9A%E4%B9%89%E4%B8%8E%E5%AE%9E%E4%BE%8B%E5%8C%96/</link>
      <pubDate>Fri, 11 Oct 2019 15:48:42 +0800</pubDate>
      
      <guid>https://nopshore.top/posts/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%A6%82%E8%BF%B0%E4%B8%80%E7%B1%BB%E7%9A%84%E5%AE%9A%E4%B9%89%E4%B8%8E%E5%AE%9E%E4%BE%8B%E5%8C%96/</guid>
      <description>面向对象三大特征 封装 保护数据不被外部访问 继承 对父类功能的扩展 多态 一个对象的多种形态 类和对象 类是对某一类事物的具有相同特征的抽象，是对象的模板。 对象是类</description>
    </item>
    
    <item>
      <title>我在Linux上的常用软件（长期更新）</title>
      <link>https://nopshore.top/posts/%E6%88%91%E5%9C%A8linux%E4%B8%8A%E7%9A%84%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0/</link>
      <pubDate>Thu, 26 Sep 2019 15:16:17 +0800</pubDate>
      
      <guid>https://nopshore.top/posts/%E6%88%91%E5%9C%A8linux%E4%B8%8A%E7%9A%84%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0/</guid>
      <description>操作系统：ArchLinux (Arch死忠粉一枚) 桌面环境：KDE (plasma) 音乐： netease-cloud-music (网易云音乐) Listen1 (集成了网易云、虾米、QQ音乐、酷狗等各大平台的音乐) amarok ViPER4Linux</description>
    </item>
    
    <item>
      <title>解决proxychains不支持yay的问题</title>
      <link>https://nopshore.top/posts/%E8%A7%A3%E5%86%B3proxychains%E4%B8%8D%E6%94%AF%E6%8C%81yay%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Thu, 26 Sep 2019 15:16:17 +0800</pubDate>
      
      <guid>https://nopshore.top/posts/%E8%A7%A3%E5%86%B3proxychains%E4%B8%8D%E6%94%AF%E6%8C%81yay%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>问题如下 $ proxychains yay -S petal [proxychains] config file found: /etc/proxychains.conf [proxychains] preloading /usr/lib/libproxychains4.so [proxychains] DLL init: proxychains-ng 4.14 Get https://aur.archlinux.org/rpc.php?arg%5B%5D=petal&amp;amp;type=info&amp;amp;v=5: dial tcp 224.0.0.1:443: connect: network is unreachable 解决方法 修改proxychains配置文件，把proxy_dns注释掉。 打开proxyc</description>
    </item>
    
    <item>
      <title>在Linux上使用VIPER4音效</title>
      <link>https://nopshore.top/posts/%E5%9C%A8linux%E4%B8%8A%E4%BD%BF%E7%94%A8viper4%E9%9F%B3%E6%95%88/</link>
      <pubDate>Thu, 12 Sep 2019 15:35:19 +0800</pubDate>
      
      <guid>https://nopshore.top/posts/%E5%9C%A8linux%E4%B8%8A%E4%BD%BF%E7%94%A8viper4%E9%9F%B3%E6%95%88/</guid>
      <description>VIPER4音效是什么？ 摘自百度百科：VIPER4Android ViPER4Android XHiFi 是一款用于Android系统的全局音效驱动，主要用于还原音频中原有的声音细节，包括</description>
    </item>
    
    <item>
      <title>C语言冒泡排序算法</title>
      <link>https://nopshore.top/posts/c%E8%AF%AD%E8%A8%80%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link>
      <pubDate>Mon, 26 Aug 2019 20:52:48 +0800</pubDate>
      
      <guid>https://nopshore.top/posts/c%E8%AF%AD%E8%A8%80%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid>
      <description>冒泡排序基本思想 不断比较数组中相邻的两个元素，让两个元素中较大的元素后移，经过一轮比较后，数值中最大的元素将会移动到数组末尾位置，第二轮将数组第二大的</description>
    </item>
    
    <item>
      <title>C语言的复杂声明</title>
      <link>https://nopshore.top/posts/c%E8%AF%AD%E8%A8%80%E7%9A%84%E5%A4%8D%E6%9D%82%E5%A3%B0%E6%98%8E/</link>
      <pubDate>Fri, 09 Aug 2019 15:33:26 +0800</pubDate>
      
      <guid>https://nopshore.top/posts/c%E8%AF%AD%E8%A8%80%E7%9A%84%E5%A4%8D%E6%9D%82%E5%A3%B0%E6%98%8E/</guid>
      <description>指针的定义与使用 int i = 5; // 声明一个int类型的变量，把5赋值给它。 int *p; // 声明一个指向int类型的指针。 p = &amp;amp;i; // 把i自身的地址赋值给指针*p。 printf(&amp;quot;%d %p %p %p&amp;quot;,*p,&amp;amp;p,p,&amp;amp;i); 最</description>
    </item>
    
  </channel>
</rss>
