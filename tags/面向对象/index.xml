<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>面向对象 on 无岸的Blog</title>
    <link>https://nopshore.top/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</link>
    <description>Recent content in 面向对象 on 无岸的Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>本博客文章除特别声明外均为原创，采用&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh&#34;&gt; 知识共享署名-非商业性使用-相同方式共享 4.0 许可协议 &lt;/a&gt; &lt;/br&gt;
&amp;copy; 2019 - 2022 &lt;a href=&#34;https://nopshore.top&#34;&gt;无岸&lt;/a&gt; · &lt;a href=&#34;https://icp.gov.moe/?keyword=20210731&#34; target=&#34;_blank&#34;&gt;萌ICP备20210731号&lt;/a&gt;
</copyright>
    <lastBuildDate>Fri, 07 Jan 2022 20:53:09 +0800</lastBuildDate><atom:link href="https://nopshore.top/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java面向对象总结</title>
      <link>https://nopshore.top/posts/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%80%BB%E7%BB%93/</link>
      <pubDate>Fri, 07 Jan 2022 20:53:09 +0800</pubDate>
      
      <guid>https://nopshore.top/posts/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%80%BB%E7%BB%93/</guid>
      <description>继承 子类可以继承父类的所有属性和方法 private关键词： private修饰属性： 子类可以继承，不能直接调用，可以通过父类提供的公开的pub</description>
    </item>
    
    <item>
      <title>Java面向对象概述（二）：封装</title>
      <link>https://nopshore.top/posts/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%B0%81%E8%A3%85/</link>
      <pubDate>Fri, 11 Oct 2019 17:46:48 +0800</pubDate>
      
      <guid>https://nopshore.top/posts/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%B0%81%E8%A3%85/</guid>
      <description>封装的作用和优点 减少耦合 保护数据不被外界直接访问 使外部传进来的数据得到效验 保证了安全性 如何封装？ 使用访问权限修饰符对数据进行权限控制 public protected default private</description>
    </item>
    
    <item>
      <title>Java面向对象概述（一）：类的定义与实例化</title>
      <link>https://nopshore.top/posts/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%AC%94%E8%AE%B0%E4%B8%80%E7%B1%BB%E7%9A%84%E5%AE%9A%E4%B9%89%E4%B8%8E%E5%AE%9E%E4%BE%8B%E5%8C%96/</link>
      <pubDate>Fri, 11 Oct 2019 15:48:42 +0800</pubDate>
      
      <guid>https://nopshore.top/posts/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%AC%94%E8%AE%B0%E4%B8%80%E7%B1%BB%E7%9A%84%E5%AE%9A%E4%B9%89%E4%B8%8E%E5%AE%9E%E4%BE%8B%E5%8C%96/</guid>
      <description>面向对象三大特征 封装 保护数据不被外部访问 继承 对父类功能的扩展 多态 一个对象的多种形态 类和对象 类是对某一类事物的具有相同特征的抽象，是对象的模板</description>
    </item>
    
  </channel>
</rss>
